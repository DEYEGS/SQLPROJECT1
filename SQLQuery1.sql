DROP TABLE IF EXISTS EMPLOYEE

CREATE TABLE EMPLOYEE
(
EMPL_ID INT NOT NULL UNIQUE,
AGE INT NULL,
EMPL_NAME VARCHAR(50) NOT NULL,
DATE_EMPLOYED DATE DEFAULT GETDATE()
)


INSERT INTO EMPLOYEE
VALUES
(1,23,'ARON',' '),
(2,25,'JOHN',' '),
(3,26,'JONA',' '),
(4,27,'JOAN',' '),
(5,26,'JONNY',' '),
(6,' ','VIC',' ')

DROP TABLE IF EXISTS EMPL_SALARY
CREATE TABLE EMPL_SALARY
(
EMPL_ID INT NOT NULL,
JOBTITLE VARCHAR(50) NOT NULL,
SALARY MONEY NOT NULL
)
 
INSERT INTO EMPL_SALARY
VALUES(1,'HR',35000),
(2,'ACCOUNTANT',45000),
(3,'TYPIST',20000),
(4,'TYPIST',30000),
(5,'ANALYST',50000)

SELECT * FROM EMPLOYEE
SELECT * FROM EMPL_SALARY

SELECT COUNT(JOBTITLE),JOBTITLE,AVG(SALARY) AS AVGSALARY
FROM EMPL_SALARY
GROUP BY JOBTITLE
HAVING  COUNT(JOBTITLE)<3
ORDER BY COUNT(JOBTITLE) DESC


SELECT * FROM EMPLOYEE
WHERE EMPL_NAME LIKE 'J%N'

SELECT EMPL_ID,EMPL_NAME,AGE FROM EMPLOYEE
WHERE AGE IN(26,25) 

SELECT EMPL_ID,JOBTITLE,SALARY,
CASE 
   WHEN SALARY > 33000 THEN 'HIGHEST_SALARIED'
   ELSE 'LOWEST_SALARIED'
END AS SORTSALARY
FROM EMPL_SALARY
ORDER BY SORTSALARY ASC;


SELECT * /*E.EMPL_ID,E.AGE,S.JOBTITLE,S.SALARY*/
FROM EMPL_SALARY AS S
RIGHT OUTER JOIN EMPLOYEE AS E
ON E.EMPL_ID=S.EMPL_ID


DROP TABLE IF EXISTS #TEMP_EMPLOYEE
CREATE TABLE #TEMP_EMPLOYEE
(EMPL_ID INT NOT NULL,
JOBTITLE VARCHAR(50) NOT NULL,
SALARY MONEY NOT NULL
)



INSERT INTO  #TEMP_EMPLOYEE
SELECT COUNT(JOBTITLE),JOBTITLE,AVG(SALARY) AS AVGSALARY
FROM EMPL_SALARY
GROUP BY JOBTITLE
HAVING  COUNT(JOBTITLE)<3
ORDER BY COUNT(JOBTITLE) DESC


SELECT * FROM  #TEMP_EMPLOYEE



 

